// <auto-generated />
using System;
using AP_Examen.Persistencia.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AP_Examen.Persistencia.Migrations
{
    [DbContext(typeof(ExamenContext))]
    [Migration("20211017163531_initials")]
    partial class initials
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AP_Examen.Dominio.Entidades.Alumno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEdicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdUsuarioCreacion")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdUsuarioEdicion")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Sexo")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AP_Perez_Jose_Alumno", "dbo");
                });

            modelBuilder.Entity("AP_Examen.Dominio.Entidades.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEdicion")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdUsuarioCreacion")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdUsuarioEdicion")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool?>("Obligatoriedad")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("AP_Perez_Jose_Curso", "dbo");
                });

            modelBuilder.Entity("AP_Examen.Dominio.Entidades.NotasAlumno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<Guid>("AlumnoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEdicion")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Final")
                        .HasColumnType("decimal(18,6)");

                    b.Property<Guid>("IdUsuarioCreacion")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdUsuarioEdicion")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Parcial")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("Practicas")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("PromedioFinal")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("PromedioParcial")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("PromedioPracticas")
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("Id");

                    b.HasIndex("AlumnoId");

                    b.HasIndex("CursoId");

                    b.ToTable("AP_Perez_Jose_NotasAlumno", "dbo");
                });

            modelBuilder.Entity("AlumnoCurso", b =>
                {
                    b.Property<Guid>("AlumnosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CursosId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AlumnosId", "CursosId");

                    b.HasIndex("CursosId");

                    b.ToTable("AP_Perez_Jose_CursosAlumno");
                });

            modelBuilder.Entity("AP_Examen.Dominio.Entidades.NotasAlumno", b =>
                {
                    b.HasOne("AP_Examen.Dominio.Entidades.Alumno", "Alumno")
                        .WithMany("NotasAlumno")
                        .HasForeignKey("AlumnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AP_Examen.Dominio.Entidades.Curso", "Curso")
                        .WithMany("NotasAlumnos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("AlumnoCurso", b =>
                {
                    b.HasOne("AP_Examen.Dominio.Entidades.Alumno", null)
                        .WithMany()
                        .HasForeignKey("AlumnosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AP_Examen.Dominio.Entidades.Curso", null)
                        .WithMany()
                        .HasForeignKey("CursosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AP_Examen.Dominio.Entidades.Alumno", b =>
                {
                    b.Navigation("NotasAlumno");
                });

            modelBuilder.Entity("AP_Examen.Dominio.Entidades.Curso", b =>
                {
                    b.Navigation("NotasAlumnos");
                });
#pragma warning restore 612, 618
        }
    }
}
